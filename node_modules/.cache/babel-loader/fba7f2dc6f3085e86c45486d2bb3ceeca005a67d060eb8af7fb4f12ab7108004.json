{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\n\n// Завантаження продуктів з API\nexport const fetchProducts = createAsyncThunk('products/fetch', async () => {\n  const res = await fetch('http://localhost:3001/products');\n  return await res.json();\n});\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    // додаткові reducers, наприклад, для локального оновлення\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.loading = true;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.loading = false;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      var _action$error$message;\n      state.loading = false;\n      state.error = (_action$error$message = action.error.message) !== null && _action$error$message !== void 0 ? _action$error$message : 'Failed to load products';\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","items","loading","error","fetchProducts","res","fetch","json","productsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","_action$error$message","message","reducer"],"sources":["/home/anastasiia/WebstormProjects/inforce-shop_90/src/features/products/productsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { Product } from '../../types';\n\ninterface ProductsState {\n    items: Product[];\n    loading: boolean;\n    error: string | null;\n}\n\nconst initialState: ProductsState = {\n    items: [],\n    loading: false,\n    error: null,\n};\n\n// Завантаження продуктів з API\nexport const fetchProducts = createAsyncThunk('products/fetch', async () => {\n    const res = await fetch('http://localhost:3001/products');\n    return (await res.json()) as Product[];\n});\n\nconst productsSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n        // додаткові reducers, наприклад, для локального оновлення\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchProducts.pending, (state) => {\n                state.loading = true;\n            })\n            .addCase(fetchProducts.fulfilled, (state, action: PayloadAction<Product[]>) => {\n                state.items = action.payload;\n                state.loading = false;\n            })\n            .addCase(fetchProducts.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.error.message ?? 'Failed to load products';\n            });\n    },\n});\n\nexport default productsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAS/E,MAAMC,YAA2B,GAAG;EAChCC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EACxE,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;EACzD,OAAQ,MAAMD,GAAG,CAACE,IAAI,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGV,WAAW,CAAC;EAC9BW,IAAI,EAAE,UAAU;EAChBT,YAAY;EACZU,QAAQ,EAAE;IACN;EAAA,CACH;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACT,aAAa,CAACU,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACb,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDW,OAAO,CAACT,aAAa,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAgC,KAAK;MAC3EF,KAAK,CAACd,KAAK,GAAGgB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACb,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC,CACDW,OAAO,CAACT,aAAa,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAAA,IAAAG,qBAAA;MAChDL,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACZ,KAAK,IAAAiB,qBAAA,GAAGH,MAAM,CAACd,KAAK,CAACkB,OAAO,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,yBAAyB;IACnE,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,aAAa,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}